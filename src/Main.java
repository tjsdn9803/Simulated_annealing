public class Main {
    public static void main(String[] args) {
        double[] Data = new double[]{1739.25,
                1818.50,
                1955.75,
                1998.50,
                1852.00,
                1738.00,
                1862.25,
                1766.50,
                1995.50,
                2122.00,
                2117.00,
                2216.00,
                2280.00,
                2350.75,
                2336.25,
                2400.75,
                2371.75,
                2321.00,
                2359.25,
                2240.75,
                2134.50,
                2356.00,
                2295.00,
                2274.50,
                2464.25,
                2623.00,
                2750.75,
                2719.25,
                2524.00,
                2609.75,
                2636.50,
                2771.00,
                2792.00,
                2640.50,
                2675.75,
                2655.25,
                2725.00,
                2738.00,
                2811.00,
                2880.00,
                2980.25,
                2901.25,
                3083.00,
                3073.50,
                3209.00,
                3369.00,
                3487.50,
                3583.75,
                3514.00,
                3695.25,
                3586.25,
                3573.25,
                3735.50,
                3840.50,
                3884.75,
                4082.00,
                4044.75,
                4150.50,
                4338.25,
                4232.75,
                4141.25,
                4442.50,
                4329.50,
                4408.25,
                4511.00,
                4390.25,
                4585.00,
                4271.75,
                4163.00,
                4643.25,
                4668.75,
                4587.75,
                4263.00,
                4201.25,
                4476.25,
                4331.50,
                4524.25,
                4407.00,
                4726.75,
                4773.75,
                4870.25,
                4796.75,
                4816.00,
                4864.00,
                5112.75,
                5332.25,
                5438.50,
                5580.50,
                5793.25,
                5652.75,
                5882.50,
                5990.75,
                5982.50,
                6249.75,
                6369.00,
                6408.75,
                6962.50,
                6865.00,
                6594.00,
                6613.00,
                6977.00,
                7066.75,
                7244.75,
                7661.25,
                7655.25,
                6975.50,
                6949.50,
                6333.25,
                6914.75,
                7102.50,
                7400.50,
                7800.00,
                7133.50,
                7693.75,
                7866.75,
                7690.75,
                7770.50,
                8090.25,
                8417.50,
                8752.25,
                8997.75,
                8454.00,
                7786.25,
                8988.50,
                9560.25,
                10147.25,
                10890.50,
                12114.00,
                11407.25,
                11046.25,
                12277.00,
                12885.50,
                12911.25,
                12911.00,
                13089.75,
                13850.00,
                13686.50,
                13926.50
        };
        SimulatedAnnealing sa = new SimulatedAnnealing(300);
        Problem p = new Problem() {
            @Override
            public double fit(double a,double b) {
                double avg=0;
                double sum=0;
                double value=0;
                for(int i=0;i<138;i++){
                    value = Data[i]-(a*Math.exp(b*i));
                    if(value<0){
                        sum += value * (-1);
                    }
                    else{
                        sum += value;
                    }
                }
                avg = sum/138;
                return avg;
            }

            @Override
            public boolean isNeighborBetter(double f0, double f1) {
                return f0 > f1;
            }
        };
        double[] x = sa.solve(p, 100, 0.997, 1700, 1800,0,1);
        System.out.println("a: "+x[0]+ " b: "+x[1]);
        System.out.println(p.fit(x[0],x[1]));
//        System.out.println(sa.hist);
//        System.out.println(sa.a_hist);
    }
}
